#include<stdio.h>
#include<stdlib.h>
#include<string.h>

struct node {
	int data;
	struct node * link;
};

void append ( struct node **, int ) ;
void display ( struct node * ) ;
void delete (struct node **, int);

int main() {
	struct node *p ;
	p=NULL;
	int n;
	char ch[10];
	do {
		printf("Enter the value\n");
		scanf("%d",&n);
		append(&p,n);
		printf("Do you want to add another node? Type Yes/No\n");
		scanf("%s",ch);
	} while(!strcmp(ch,"Yes"));
	printf("The elements in the linked list are");
	display(p);
	printf("\n");
	printf("Enter the element to be deleted\n");
	scanf("%d",&n);
	delete(&p,n);
	printf("The elements in the linked list after deleting the element are");
	display(p);
	printf("\n");
	return 0;
}

void append ( struct node **q, int num ) {
	// Fill in the code here
	struct node * nn=(struct node *)malloc(sizeof(struct node));
	nn->data=num;
	nn->link=NULL;
	if(*q==NULL){
     *q=nn;
	}
	else{
		struct  node*temp=*q;
		while(temp->link != NULL){
			temp= temp->link;
		}
		temp->link=nn;
	}
}

void display ( struct node *q ) {
	// Fill in the code here
	while(q!= NULL){
		printf(" %d",q->data);
           q=q->link;
	}
}

void delete ( struct node **q, int num ) {
	// Fill in the code here
	struct node*temp=*q,*prev=NULL;
	if(temp!=NULL  && temp->data==num){
		*q=temp->link;
		free(temp);
	 return;
	}
	while(temp!=NULL && temp->data != num){
		prev=temp;
		temp=temp->link;
	}
	
	if(temp==NULL){
	printf ( "Element %d is  not  found in the list \n", num ) ;
	exit(0);          // total process end like a close button
	}
	prev->link=temp->link;
	free(temp);
}
