#include<stdio.h>
#include<stdlib.h>
#include<string.h>
struct node {
	int data;
	struct node * link;
};
void append ( struct node **, int ) ;
void display ( struct node * ) ;
void delafter ( struct node *, int ) ;

int main() {
	struct node *p ;
	p=NULL;
	int n,l;
	char ch[10];
	do {
		printf("Enter the value\n");
		scanf("%d",&n);
		append(&p,n);
		printf("Do you want to add another node? Type Yes/No\n");
		scanf("%s",ch);
	}while(!strcmp(ch,"Yes"));
	printf("The elements in the linked list are");
	display(p);
	printf("\n");
	do {
		printf("Enter the position after which you want to delete another node\n");
		scanf("%d",&l);
		delafter(p,l);
		printf("The elements in the linked list are");
		display(p);
		printf("\n");
		printf("Do you want to delete another node after a certain position? Type Yes/No\n");
		scanf("%s",ch);
	}while(!strcmp(ch,"Yes"));
	return 0;
}

void append ( struct node **q, int num ) {
	struct node*nn=(struct node *)malloc(sizeof(struct node));
nn->data=num;
	nn->link=NULL;
  if(*q==NULL){
	  *q=nn;
  }
  else{
	  struct node*temp=*q;
	  while(temp->link != NULL){
		  temp=temp->link;
	  }
	  temp->link=nn;
  }
}

void display ( struct node *q ) {
	// Fill in the code here
	//struct node*temp=malloc(sizeof(struct node));
		struct node*temp=q;
		while(temp!=NULL){
			printf("%d ",temp->data);
			temp=temp->link;
		}printf("\n");
}

void delafter ( struct node *q, int loc ) {
	// Fill in the code here
	struct node*temp=q;
	struct node*aft=NULL;
	//*temp=*q;
	int count=1;
	 while(temp!=NULL && count<loc){
		count++;
		 temp=temp->link;
	 }	if(temp==NULL|| temp->link==NULL){
		 printf("Invalid position\n");
		 return;
	 }
	 aft=temp->link;
     temp->link = aft->link;
	 free(aft);
}
